Terminals unused in grammar

    '-'
    '/'


Grammar

    0 $accept: input $end

    1 input: ε
    2      | input line

    3 line: '\n'
    4     | expr '\n'
    5     | error '\n'

    6 expr: expr '+' expr
    7     | expr '*' expr
    8     | '(' expr ')'
    9     | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 3 4 5
    '(' (40) 8
    ')' (41) 8
    '*' (42) 7
    '+' (43) 6
    '-' (45)
    '/' (47)
    error (256) 5
    NUMBER <num> (258) 9


Nonterminals, with rules where they appear

    $accept (11)
        on left: 0
    input (12)
        on left: 1 2
        on right: 0 2
    line (13)
        on left: 3 4 5
        on right: 2
    expr <num> (14)
        on left: 6 7 8 9
        on right: 4 6 7 8


State 0

    0 $accept: • input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input • $end
    2 input: input • line

    $end    shift, and go to state 2
    error   shift, and go to state 3
    NUMBER  shift, and go to state 4
    '\n'    shift, and go to state 5
    '('     shift, and go to state 6

    line  go to state 7
    expr  go to state 8


State 2

    0 $accept: input $end •

    $default  accept


State 3

    5 line: error • '\n'

    '\n'  shift, and go to state 9


State 4

    9 expr: NUMBER •

    $default  reduce using rule 9 (expr)


State 5

    3 line: '\n' •

    $default  reduce using rule 3 (line)


State 6

    8 expr: '(' • expr ')'

    NUMBER  shift, and go to state 4
    '('     shift, and go to state 6

    expr  go to state 10


State 7

    2 input: input line •

    $default  reduce using rule 2 (input)


State 8

    4 line: expr • '\n'
    6 expr: expr • '+' expr
    7     | expr • '*' expr

    '+'   shift, and go to state 11
    '*'   shift, and go to state 12
    '\n'  shift, and go to state 13


State 9

    5 line: error '\n' •

    $default  reduce using rule 5 (line)


State 10

    6 expr: expr • '+' expr
    7     | expr • '*' expr
    8     | '(' expr • ')'

    '+'  shift, and go to state 11
    '*'  shift, and go to state 12
    ')'  shift, and go to state 14


State 11

    6 expr: expr '+' • expr

    NUMBER  shift, and go to state 4
    '('     shift, and go to state 6

    expr  go to state 15


State 12

    7 expr: expr '*' • expr

    NUMBER  shift, and go to state 4
    '('     shift, and go to state 6

    expr  go to state 16


State 13

    4 line: expr '\n' •

    $default  reduce using rule 4 (line)


State 14

    8 expr: '(' expr ')' •

    $default  reduce using rule 8 (expr)


State 15

    6 expr: expr • '+' expr
    6     | expr '+' expr •
    7     | expr • '*' expr

    '*'  shift, and go to state 12

    $default  reduce using rule 6 (expr)


State 16

    6 expr: expr • '+' expr
    7     | expr • '*' expr
    7     | expr '*' expr •

    $default  reduce using rule 7 (expr)
